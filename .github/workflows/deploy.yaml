name: CI/CD Pipeline

on:
  push:
    branches:
      - master # Trigger on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Build with Gradle
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      # Step 4: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: saidaloshamsiyev1
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t saidaloshamsiyev1/for-aws:latest .
          docker push saidaloshamsiyev1/for-aws:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Set up SSH
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      # Step 2: Add SSH key for EC2
      - name: Add SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AWS_SSH_KEY }}
          known_hosts: ${{ secrets.EC2_KNOWN_HOSTS }}

      # Step 3: Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_KNOWN_HOSTS }} "
          sudo docker pull saidaloshamsiyev1/for-aws:latest &&
          sudo docker stop my-app || true &&
          sudo docker rm my-app || true &&
          sudo docker run -d --name my-app -p 8080:8080 saidaloshamsiyev1/for-aws:latest
          "
